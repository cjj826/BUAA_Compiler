//B-test1
/*
	qsort
*/
const int M = 10, t[10] = {11, 4, 34, 325, 52, 526, 235, 1, 24, 22};
const int OP[3][2] = {{9, 14}, {135, 3}, {23, 14}};
int a1 = 0, a2;
int pp[1][1] = {{1}};
int ut[2] = {9, 10};
int ts[10] = {11, 4, 34, 325, 52, 526, 235, 1, 24, 22};
int op[3][2] = {{9, 14}, {135, 3}, {23, 14}};

void qsort(int a[], int l, int r) {
	if (l < r) {
		int i = l, j = r;
		int mid = a[l];
		while (i < j) {
			while (i < j && a[j] >= mid) j = j - 1;
			if (i < j) {
				a[i] = a[j];
				i = i + 1;
			}
			while (i < j && a[i] <= mid) i = i + 1;
			if (i < j) {
				a[j] = a[i];
				j = j - 1;
			}
			a[i] = mid;
		}
		qsort(a, l, i - 1);
		qsort(a, i + 1, r);
	}
}

void prT() {
	int i = 0;
	while (i < M) {
		printf("%d\n",t[i]);
		i = i + 1; 
		if (i == M) {
			printf("\n");
			return;
		} 
	}
}

int sum4list2(int a[][2]) {
	int ans = 0;
	int i = 0;
	while (i < 3) {
		int j = 0;
		while (j < 2) {
			printf("i = %d j  = %d\n", i, j);
			ans = ans + a[i][j];
			j = j + 1;
		}
		i = i + 1;
	}
	return ans;
}

int main() {
	printf("20373025\n");
	int n;
	n = getint();
	int i = 0;
	int num[1009];
	while (i < n) {
		num[i] = getint();
		i = i + 1;
	}
	qsort(num, 0, n - 1);
	i = 0;
	while (i < n) {
		printf("%d\n", num[i]);
		i = i + 1;
	}
	printf("\n");
	qsort(ts, 0, M - 1);
	i = 0;
	while (i < M) {
		printf("%d\n", ts[i]);
		i = i + 1;
	}
	prT();
	printf("%d\n", sum4list2(op));
	return 0;
}