declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
define i32 @foo(i32 %f0, i32 %f1, i32 %f2, i32 %f3) {
Block0:
	%loc3 = alloca i32
	%loc2 = alloca i32
	%loc1 = alloca i32
	%loc0 = alloca i32
	store i32 %f0, i32* %loc0
	store i32 %f1, i32* %loc1
	store i32 %f2, i32* %loc2
	store i32 %f3, i32* %loc3
	%reg0 = load i32, i32* %loc0
	call void @putint(i32 %reg0)
	%reg1 = load i32, i32* %loc1
	ret i32 %reg1
}
define i32 @main() {
Block1:
	%loc4 = alloca [4 x i32]
	%loc5 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 0
	store i32 1, i32* %loc5
	%loc6 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 0
	%loc7 = getelementptr inbounds i32, i32* %loc6, i32 1
	store i32 2, i32* %loc7
	%loc8 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 0
	%loc9 = getelementptr inbounds i32, i32* %loc8, i32 2
	store i32 3, i32* %loc9
	%loc10 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 0
	%loc11 = getelementptr inbounds i32, i32* %loc10, i32 3
	store i32 4, i32* %loc11
	%loc12 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 0
	%reg2 = load i32, i32* %loc12
	%loc13 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 1
	%reg3 = load i32, i32* %loc13
	%loc14 = getelementptr inbounds [4 x i32], [4 x i32]* %loc4, i32 0, i32 2
	%reg4 = load i32, i32* %loc14
	%reg5 = add i32 %reg4, 3
	%reg6 = call i32 @foo(i32 %reg2, i32 %reg3, i32 %reg5, i32 4)
	ret i32 0
}
