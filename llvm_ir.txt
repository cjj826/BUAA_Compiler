@global0 = constant i32 4
@global1 = constant i32 64
@global2 = constant i32 -49331
@global3 = constant i32 24
@global4 = constant i32 1040
@global5 = constant [2 x i32] [i32 10086, i32 16]
@global6 = constant [4 x [3 x i32]] [[3 x i32] [i32 212132, i32 76, i32 308], [3 x i32] [i32 26, i32 57048, i32 3194880], [3 x i32] [i32 8792, i32 -687331, i32 908], [3 x i32] [i32 1040, i32 136, i32 10104]]
@global7 = global i32 4491858
@global8 = global i32 -597
@global9 = global i32 0
@global10 = global i32 1983
@global11 = global [4 x i32] [i32 2323, i32 9254, i32 0, i32 -1269906]
@global12 = global [3 x [2 x i32]] zeroinitializer
@global13 = global [2 x i32] zeroinitializer
@global14 = global i32 0
@global15 = global [2 x [2 x i32]] [[2 x i32] [i32 287, i32 -98662], [2 x i32] [i32 287, i32 11505]]
@global16 = global i32 0
define void @__(i32* %f3, i32 %f4) {
Block6:
	%loc6 = alloca i32
	%loc5 = alloca i32*
	store i32* %f3, i32** %loc5
	store i32 %f4, i32* %loc6
	%reg30 = load i32*, i32** %loc5
	%loc7 = getelementptr inbounds i32, i32* %reg30, i32 0
	%reg31 = load i32, i32* %loc7
	call void @putch(i32 99)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 108)
	call void @putch(i32 101)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 121)
	call void @putch(i32 91)
	call void @putch(i32 48)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %reg31)
	call void @putch(i32 10)
	call void @putch(i32 10)
	call void @putch(i32 10)
	ret void
}
declare void @putint(i32)
define i32 @__my_Ha_s__h(i32* %f0, i32 %f1) {
Block0:
	%loc3 = alloca i32
	%loc2 = alloca i32
	%loc1 = alloca i32
	%loc0 = alloca i32*
	store i32* %f0, i32** %loc0
	store i32 %f1, i32* %loc1
	%reg0 = load i32, i32* %loc1
	store i32 %reg0, i32* %loc2
	store i32 0, i32* %loc3
	br label %Block1
Block1:
	%reg1 = load i32, i32* %loc3
	%reg2 = load i32, i32* %loc1
	%reg3 = icmp slt i32 %reg1, %reg2
	br i1 %reg3, label %Block2, label %Block3
Block2:
	%reg4 = load i32, i32* %loc2
	%reg5 = add i32 %reg4, 98326464
	store i32 %reg5, i32* %loc2
	%reg6 = load i32, i32* %loc2
	%reg7 = mul i32 %reg6, 20373381
	store i32 %reg7, i32* %loc2
	%reg8 = load i32, i32* %loc2
	%reg9 = add i32 %reg8, 23667832
	store i32 %reg9, i32* %loc2
	%reg10 = load i32, i32* %loc2
	%reg11 = sdiv i32 %reg10, 133
	store i32 %reg11, i32* %loc2
	%reg12 = load i32, i32* %loc2
	%reg13 = add i32 %reg12, 1347887899
	store i32 %reg13, i32* %loc2
	%reg14 = load i32, i32* %loc2
	%reg15 = srem i32 %reg14, 99998099
	store i32 %reg15, i32* %loc2
	%reg16 = load i32, i32* %loc2
	%reg17 = mul i32 %reg16, 123671861
	%reg18 = sub i32 %reg17, 236234
	%reg19 = load i32, i32* %loc2
	%reg20 = add i32 %reg19, 135632
	%reg21 = mul i32 %reg18, %reg20
	%reg22 = sdiv i32 %reg21, 7
	store i32 %reg22, i32* %loc2
	%reg23 = load i32, i32* %loc3
	%reg24 = add i32 %reg23, 1
	store i32 %reg24, i32* %loc3
	br label %Block1
Block3:
	%reg25 = load i32, i32* %loc2
	ret i32 %reg25
}
define void @_Main([2 x i32]* %f5) {
Block7:
	%loc8 = alloca [2 x i32]*
	store [2 x i32]* %f5, [2 x i32]** %loc8
	%reg32 = load [2 x i32]*, [2 x i32]** %loc8
	%loc9 = getelementptr inbounds [2 x i32], [2 x i32]* %reg32, i32 0, i32 0
	%reg33 = load i32, i32* %loc9
	%reg34 = load [2 x i32]*, [2 x i32]** %loc8
	%loc10 = getelementptr inbounds [2 x i32], [2 x i32]* %reg34, i32 0, i32 1
	%reg35 = load i32, i32* %loc10
	call void @putch(i32 99)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 108)
	call void @putch(i32 101)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 77)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 121)
	call void @putch(i32 91)
	call void @putch(i32 48)
	call void @putch(i32 93)
	call void @putch(i32 91)
	call void @putch(i32 48)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %reg33)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 121)
	call void @putch(i32 91)
	call void @putch(i32 48)
	call void @putch(i32 93)
	call void @putch(i32 91)
	call void @putch(i32 49)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %reg35)
	call void @putch(i32 10)
	call void @putch(i32 10)
	ret void
}
define i32 @_add_fake(i32 %f6, i32 %f7) {
Block8:
	%loc12 = alloca i32
	%loc11 = alloca i32
	store i32 %f6, i32* %loc11
	store i32 %f7, i32* %loc12
	%reg36 = load i32, i32* %loc11
	%reg37 = load i32, i32* %loc12
	%reg38 = add i32 %reg36, %reg37
	%reg39 = icmp sge i32 %reg38, 10186
	br i1 %reg39, label %Block9, label %Block10
Block9:
	%reg40 = load i32, i32* %loc11
	%reg41 = load i32, i32* %loc12
	%reg42 = mul i32 203, %reg41
	%reg43 = sdiv i32 %reg42, 201
	%reg44 = add i32 %reg40, %reg43
	ret i32 %reg44
Block10:
	%reg45 = load i32, i32* %loc11
	%reg46 = load i32, i32* %loc12
	%reg47 = add i32 %reg45, %reg46
	%reg48 = sub i32 %reg47, 10086
	%reg49 = icmp slt i32 %reg48, 12345678
	br i1 %reg49, label %Block12, label %Block13
Block11:
	ret i32 -10086
Block12:
	%reg50 = load i32, i32* %loc11
	%reg51 = mul i32 1003, %reg50
	%reg52 = sdiv i32 %reg51, 1009
	%reg53 = load i32, i32* %loc12
	%reg54 = mul i32 2022, %reg53
	%reg55 = sdiv i32 %reg54, 2019
	%reg56 = add i32 %reg52, %reg55
	ret i32 %reg56
Block13:
	%reg57 = load i32, i32* %loc11
	%reg58 = load i32, i32* %loc12
	%reg59 = add i32 %reg57, %reg58
	%reg60 = sub i32 %reg59, 233
	ret i32 %reg60
Block14:
	br label %Block11
}
define i32 @main() {
Block18:
	%loc52 = alloca i32
	%loc49 = alloca [12 x i32]
	%loc48 = alloca i32
	%loc46 = alloca i32
	%loc45 = alloca i32
	%loc44 = alloca i32
	%loc43 = alloca i32
	%loc42 = alloca i32
	%loc41 = alloca i32
	%loc40 = alloca i32
	%loc24 = alloca [2 x [4 x i32]]
	%loc23 = alloca i32
	%loc22 = alloca i32
	%loc21 = alloca i32
	%loc20 = alloca i32
	%loc19 = alloca i32
	%loc25 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	store i32 1, i32* %loc25
	%loc26 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc27 = getelementptr inbounds i32, i32* %loc26, i32 1
	store i32 2, i32* %loc27
	%loc28 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc29 = getelementptr inbounds i32, i32* %loc28, i32 2
	store i32 3, i32* %loc29
	%loc30 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc31 = getelementptr inbounds i32, i32* %loc30, i32 3
	store i32 4, i32* %loc31
	%loc32 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc33 = getelementptr inbounds i32, i32* %loc32, i32 4
	store i32 5, i32* %loc33
	%loc34 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc35 = getelementptr inbounds i32, i32* %loc34, i32 5
	store i32 6, i32* %loc35
	%loc36 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc37 = getelementptr inbounds i32, i32* %loc36, i32 6
	store i32 7, i32* %loc37
	%loc38 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %loc24, i32 0, i32 0, i32 0
	%loc39 = getelementptr inbounds i32, i32* %loc38, i32 7
	store i32 8, i32* %loc39
	store i32 10, i32* %loc40
	store i32 20, i32* %loc41
	store i32 10, i32* %loc42
	store i32 0, i32* %loc43
	store i32 1, i32* %loc44
	%reg75 = call i32 @getint()
	store i32 %reg75, i32* %loc19
	%reg76 = call i32 @getint()
	store i32 %reg76, i32* %loc20
	%reg77 = call i32 @getint()
	store i32 %reg77, i32* %loc21
	%reg78 = call i32 @getint()
	store i32 %reg78, i32* %loc22
	%reg79 = call i32 @getint()
	store i32 %reg79, i32* %loc23
	%reg80 = load i32, i32* %loc19
	%reg81 = icmp eq i32 %reg80, 20373381
	br i1 %reg81, label %Block19, label %Block20
Block19:
	%reg82 = load i32, i32* %loc44
	%reg83 = add i32 %reg82, 1
	store i32 %reg83, i32* %loc44
	%reg84 = load i32, i32* %loc43
	%reg85 = add i32 %reg84, 1332
	store i32 %reg85, i32* %loc43
	br label %Block20
Block20:
	%reg86 = load i32, i32* %loc20
	%reg87 = icmp sgt i32 %reg86, 200
	br i1 %reg87, label %Block21, label %Block22
Block21:
	%reg88 = load i32, i32* %loc44
	%reg89 = add i32 %reg88, 1
	store i32 %reg89, i32* %loc44
	br label %Block22
Block22:
	%reg90 = load i32, i32* %loc21
	%reg91 = icmp sge i32 %reg90, 111
	br i1 %reg91, label %Block23, label %Block24
Block23:
	%reg92 = load i32, i32* %loc22
	%reg93 = icmp ne i32 %reg92, 2234
	br i1 %reg93, label %Block25, label %Block26
Block24:
	store i32 0, i32* %loc45
	store i32 0, i32* %loc46
	br label %Block28
Block25:
	%reg94 = load i32, i32* %loc44
	%reg95 = add i32 %reg94, 1
	store i32 %reg95, i32* %loc44
	br label %Block27
Block26:
	%reg96 = load i32, i32* %loc44
	%reg97 = add i32 %reg96, 2729
	store i32 %reg97, i32* %loc44
	br label %Block27
Block27:
	br label %Block24
Block28:
	%reg98 = icmp eq i32 0, 0
	br i1 %reg98, label %Block29, label %Block30
Block29:
	%reg99 = load i32, i32* %loc46
	%reg100 = load i32, i32* %loc45
	%loc47 = getelementptr inbounds [2 x i32], [2 x i32]* @global5, i32 0, i32 %reg100
	%reg101 = load i32, i32* %loc47
	%reg102 = add i32 %reg99, %reg101
	store i32 %reg102, i32* %loc46
	%reg103 = load i32, i32* %loc45
	%reg104 = add i32 %reg103, 1
	store i32 %reg104, i32* %loc45
	%reg105 = load i32, i32* %loc45
	%reg106 = icmp sge i32 %reg105, 2
	br i1 %reg106, label %Block31, label %Block32
Block30:
	store i32 0, i32* %loc48
	br label %Block33
Block31:
	br label %Block30
Block32:
	br label %Block28
Block33:
	%reg107 = icmp sle i32 1, 2
	br i1 %reg107, label %Block34, label %Block35
Block34:
	%reg108 = load i32, i32* %loc48
	%loc50 = getelementptr inbounds [12 x i32], [12 x i32]* %loc49, i32 0, i32 %reg108
	store i32 0, i32* %loc50
	%reg109 = load i32, i32* %loc48
	%reg110 = icmp eq i32 %reg109, 5
	br i1 %reg110, label %Block36, label %Block37
Block35:
	store i32 0, i32* %loc52
	%reg126 = icmp slt i32 4, 5
	br i1 %reg126, label %Block40, label %Block42
Block36:
	%reg111 = load i32, i32* %loc48
	%reg112 = add i32 %reg111, 1
	store i32 %reg112, i32* %loc48
	br label %Block33
Block37:
	%reg113 = load i32, i32* %loc48
	%reg114 = icmp sgt i32 %reg113, 10
	br i1 %reg114, label %Block38, label %Block39
Block38:
	br label %Block35
Block39:
	%reg115 = load i32, i32* %loc48
	%loc51 = getelementptr inbounds [12 x i32], [12 x i32]* %loc49, i32 0, i32 %reg115
	%reg116 = load i32, i32* %loc48
	store i32 %reg116, i32* %loc51
	%reg117 = load i32, i32* %loc48
	%reg118 = add i32 %reg117, 1
	store i32 %reg118, i32* %loc48
	%reg119 = load i32, i32* %loc46
	%reg120 = load i32, i32* %loc48
	%reg121 = load i32, i32* %loc48
	%reg122 = mul i32 %reg120, %reg121
	%reg123 = add i32 %reg119, %reg122
	store i32 %reg123, i32* %loc46
	%reg124 = load i32, i32* %loc44
	%reg125 = add i32 %reg124, 1
	store i32 %reg125, i32* %loc44
	br label %Block33
Block40:
	%reg128 = load i32, i32* %loc52
	%reg129 = add i32 %reg128, 1
	store i32 %reg129, i32* %loc52
	br label %Block41
Block41:
	%reg130 = icmp slt i32 24, 0
	br i1 %reg130, label %Block45, label %Block44
Block42:
	%reg127 = icmp slt i32 10086, 10
	br i1 %reg127, label %Block40, label %Block41
Block43:
	%reg132 = load i32, i32* %loc52
	%reg133 = add i32 %reg132, 2
	store i32 %reg133, i32* %loc52
	br label %Block44
Block44:
	%loc53 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 0, i32 0
	%reg134 = call i32 @getint()
	store i32 %reg134, i32* %loc53
	%loc54 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 1, i32 0
	%reg135 = call i32 @getint()
	store i32 %reg135, i32* %loc54
	%loc55 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 2, i32 0
	%reg136 = call i32 @getint()
	store i32 %reg136, i32* %loc55
	%loc56 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 0
	%reg137 = call i32 @getint()
	store i32 %reg137, i32* %loc56
	%loc57 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 1
	%reg138 = call i32 @getint()
	store i32 %reg138, i32* %loc57
	%reg139 = call i32 @getint()
	store i32 %reg139, i32* @global14
	%reg140 = load i32, i32* @global14
	%loc58 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 0
	%reg141 = load i32, i32* %loc58
	%loc59 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 1
	%reg142 = load i32, i32* %loc59
	%reg143 = mul i32 %reg141, %reg142
	%reg144 = add i32 %reg140, %reg143
	%loc60 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 0, i32 1
	%reg145 = load i32, i32* %loc60
	%reg146 = sdiv i32 %reg145, 2
	%reg147 = add i32 %reg144, %reg146
	store i32 %reg147, i32* @global14
	%loc61 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 2, i32 1
	%loc62 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 2, i32 0
	%reg148 = load i32, i32* %loc62
	%loc63 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 1, i32 0
	%reg149 = load i32, i32* %loc63
	%reg150 = mul i32 %reg148, %reg149
	store i32 %reg150, i32* %loc61
	%reg151 = load i32, i32* %loc46
	%reg152 = load i32, i32* %loc46
	%reg153 = mul i32 %reg151, %reg152
	%reg154 = call i32 @_add(i32 10, i32 20, i32 3)
	%reg155 = add i32 %reg153, %reg154
	store i32 %reg155, i32* @global16
	call void @putch(i32 50)
	call void @putch(i32 48)
	call void @putch(i32 51)
	call void @putch(i32 55)
	call void @putch(i32 51)
	call void @putch(i32 51)
	call void @putch(i32 56)
	call void @putch(i32 49)
	call void @putch(i32 10)
	%reg156 = load i32, i32* %loc46
	%reg157 = call i32 @_get_id()
	%reg158 = add i32 %reg156, %reg157
	%reg159 = load i32, i32* %loc19
	%reg160 = call i32 @_add_fake(i32 123243, i32 %reg159)
	%reg161 = add i32 %reg158, %reg160
	store i32 %reg161, i32* %loc46
	call void @___()
	%loc64 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @global15, i32 0, i32 0
	call void @_Main([2 x i32]* %loc64)
	%loc65 = getelementptr inbounds [4 x i32], [4 x i32]* @global11, i32 0, i32 0
	call void @__(i32* %loc65, i32 3432)
	%reg162 = load i32, i32* %loc52
	call void @putch(i32 116)
	call void @putch(i32 101)
	call void @putch(i32 109)
	call void @putch(i32 112)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putint(i32 %reg162)
	call void @putch(i32 10)
	%loc66 = getelementptr inbounds [12 x i32], [12 x i32]* %loc49, i32 0, i32 0
	%reg163 = call i32 @__my_Ha_s__h(i32* %loc66, i32 12)
	%reg164 = load i32, i32* %loc46
	%reg165 = load i32, i32* @global7
	%reg166 = load i32, i32* @global8
	%reg167 = load i32, i32* @global9
	%reg168 = load i32, i32* @global10
	%loc67 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 0, i32 0
	%reg169 = load i32, i32* %loc67
	%loc68 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 0, i32 1
	%reg170 = load i32, i32* %loc68
	%loc69 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 1, i32 0
	%reg171 = load i32, i32* %loc69
	%loc70 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 1, i32 1
	%reg172 = load i32, i32* %loc70
	%loc71 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 2, i32 0
	%reg173 = load i32, i32* %loc71
	%loc72 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* @global12, i32 0, i32 2, i32 1
	%reg174 = load i32, i32* %loc72
	%loc73 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 0
	%reg175 = load i32, i32* %loc73
	%loc74 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 1
	%reg176 = load i32, i32* %loc74
	%reg177 = load i32, i32* @global14
	%reg178 = load i32, i32* @global16
	%loc75 = getelementptr inbounds [2 x i32], [2 x i32]* @global13, i32 0, i32 0
	%reg179 = call i32 @__my_Ha_s__h(i32* %loc75, i32 2)
	%reg180 = call i32 @_M__a_G_I___c(i32 %reg179)
	%loc76 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @global15, i32 0, i32 0
	%loc77 = getelementptr inbounds [2 x i32], [2 x i32]* %loc76, i32 0, i32 0
	%reg181 = call i32 @__my_Ha_s__h(i32* %loc77, i32 2)
	%reg182 = load i32, i32* %loc43
	%reg183 = load i32, i32* %loc42
	%reg184 = load i32, i32* %loc23
	call void @putint(i32 %reg163)
	call void @putch(i32 32)
	call void @putint(i32 %reg164)
	call void @putch(i32 32)
	call void @putint(i32 1)
	call void @putch(i32 32)
	call void @putint(i32 64)
	call void @putch(i32 32)
	call void @putint(i32 24)
	call void @putch(i32 32)
	call void @putint(i32 1040)
	call void @putch(i32 32)
	call void @putint(i32 10086)
	call void @putch(i32 32)
	call void @putint(i32 16)
	call void @putch(i32 32)
	call void @putint(i32 212132)
	call void @putch(i32 32)
	call void @putint(i32 76)
	call void @putch(i32 10)
	call void @putint(i32 308)
	call void @putch(i32 32)
	call void @putint(i32 26)
	call void @putch(i32 32)
	call void @putint(i32 57048)
	call void @putch(i32 32)
	call void @putint(i32 3194880)
	call void @putch(i32 32)
	call void @putint(i32 8792)
	call void @putch(i32 32)
	call void @putint(i32 -687331)
	call void @putch(i32 32)
	call void @putint(i32 908)
	call void @putch(i32 32)
	call void @putint(i32 1040)
	call void @putch(i32 32)
	call void @putint(i32 136)
	call void @putch(i32 32)
	call void @putint(i32 10104)
	call void @putch(i32 10)
	call void @putint(i32 %reg165)
	call void @putch(i32 32)
	call void @putint(i32 %reg166)
	call void @putch(i32 32)
	call void @putint(i32 %reg167)
	call void @putch(i32 32)
	call void @putint(i32 %reg168)
	call void @putch(i32 32)
	call void @putint(i32 %reg169)
	call void @putch(i32 32)
	call void @putint(i32 %reg170)
	call void @putch(i32 32)
	call void @putint(i32 %reg171)
	call void @putch(i32 32)
	call void @putint(i32 %reg172)
	call void @putch(i32 32)
	call void @putint(i32 %reg173)
	call void @putch(i32 32)
	call void @putint(i32 %reg174)
	call void @putch(i32 10)
	call void @putint(i32 %reg175)
	call void @putch(i32 32)
	call void @putint(i32 %reg176)
	call void @putch(i32 32)
	call void @putint(i32 %reg177)
	call void @putch(i32 32)
	call void @putint(i32 %reg178)
	call void @putch(i32 32)
	call void @putint(i32 %reg180)
	call void @putch(i32 32)
	call void @putint(i32 %reg181)
	call void @putch(i32 32)
	call void @putint(i32 %reg182)
	call void @putch(i32 32)
	call void @putint(i32 %reg183)
	call void @putch(i32 32)
	call void @putint(i32 %reg184)
	call void @putch(i32 32)
	call void @putint(i32 3)
	call void @putch(i32 10)
	%reg185 = load i32, i32* %loc44
	call void @____(i32 %reg185)
	ret i32 0
Block45:
	%reg131 = icmp sgt i32 10086, 10
	br i1 %reg131, label %Block43, label %Block44
}
define void @____(i32 %f2) {
Block5:
	%loc4 = alloca i32
	store i32 %f2, i32* %loc4
	%reg26 = load i32, i32* %loc4
	%reg27 = mul i32 %reg26, 2
	%reg28 = mul i32 %reg27, 3
	%reg29 = sdiv i32 %reg28, 6
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 99)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 108)
	call void @putch(i32 101)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 95)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 103)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %reg29)
	call void @putch(i32 10)
	ret void
}
define i32 @_add(i32 %f8, i32 %f9, i32 %f10) {
Block15:
	%loc15 = alloca i32
	%loc14 = alloca i32
	%loc13 = alloca i32
	store i32 %f8, i32* %loc13
	store i32 %f9, i32* %loc14
	store i32 %f10, i32* %loc15
	%reg61 = load i32, i32* %loc13
	%reg62 = load i32, i32* %loc14
	%reg63 = add i32 %reg61, %reg62
	%reg64 = load i32, i32* %loc15
	%reg65 = add i32 %reg63, %reg64
	ret i32 %reg65
}
declare i32 @getint()
declare void @putch(i32)
define i32 @_M__a_G_I___c(i32 %f11) {
Block17:
	%loc18 = alloca i32
	store i32 %f11, i32* %loc18
	%reg69 = load i32, i32* %loc18
	%reg70 = add i32 %reg69, -763835168
	%reg71 = srem i32 %reg70, 1996325548
	%reg72 = mul i32 %reg71, 1881457024
	%reg73 = sdiv i32 %reg72, 11
	%reg74 = mul i32 %reg73, 540488577
	ret i32 %reg74
}
define i32 @_get_id() {
Block16:
	%loc17 = alloca i32
	%loc16 = alloca i32
	store i32 76, i32* %loc16
	%reg66 = load i32, i32* %loc16
	call void @putint(i32 %reg66)
	call void @putch(i32 10)
	store i32 10086, i32* %loc16
	%reg67 = load i32, i32* %loc16
	call void @putint(i32 %reg67)
	call void @putch(i32 10)
	store i32 -10, i32* %loc17
	%reg68 = load i32, i32* %loc17
	call void @putint(i32 %reg68)
	call void @putch(i32 10)
	ret i32 20373381
}
define void @___() {
Block4:
	call void @putch(i32 32)
	call void @putch(i32 32)
	call void @putch(i32 32)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 32)
	call void @putch(i32 40)
	call void @putch(i32 41)
	call void @putch(i32 42)
	call void @putch(i32 43)
	call void @putch(i32 44)
	call void @putch(i32 45)
	call void @putch(i32 46)
	call void @putch(i32 47)
	call void @putch(i32 58)
	call void @putch(i32 59)
	call void @putch(i32 60)
	call void @putch(i32 62)
	call void @putch(i32 61)
	call void @putch(i32 64)
	call void @putch(i32 63)
	call void @putch(i32 94)
	call void @putch(i32 95)
	call void @putch(i32 96)
	call void @putch(i32 123)
	call void @putch(i32 125)
	call void @putch(i32 124)
	call void @putch(i32 126)
	call void @putch(i32 91)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 32)
	call void @putch(i32 99)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 108)
	call void @putch(i32 101)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 95)
	call void @putch(i32 10)
	ret void
}
